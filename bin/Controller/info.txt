This package contains all of our program's controllers:
1. CreateAccountControl
	Controller that gets information from the front end,
	builds the CreateAccountData object,
	sends the data object to the GameClient (then to the server),
	and updates the front end with what the GameClient gets back from the server.

2. EndofGameControl
	Controller that sends information from the server to the EndofGamePanel,
	listens for any actions that happen on the EndofGamePanel,
	completes the proper action according to what input was selected.

3. GameControl
	Controller that manages the main game,
	gets input from users,
	builds the correct data package,
	sends data to GameClient (then to server),
	update's player board based on server response,
	waits on another message from server to start a new turn (also updates the board again).

4. InitialControl
	Controller that listens for any actions that happens on the first screen a user will encounter,
	completes the proper action according to what input was selected.

5. LoginControl
	Controller that gets information from the front end,
	builds the LoginData object,
	sends the data object to the GameClient (then to the server),
	and updates the front end with what the GameClient gets back from the server.

6. MenuControl
	Controller that listens for any actions that happen on the menu,
	completes the proper action according to what input was selected,
	may send information to GameClient to add the user to a game.

7. ScoreboardControl
	Controller that listens for any actions that happen on the Score Board screen,
	completes the proper action according to what input was selected.

8. StartofGameControl
	Controller that manages the placing ships stage of the game,
	Builds the StartofGameData object based on user input in the panel,
	sends data to GameClient (then to server),
	Waits on server response to start the game.
	
TO-DO:
	implement all controllers as ActionListeners
	implement functionality for initial, login, and create account control for server integration
	implement functionality for MenuControl and Score board Control
		make sure all data can be unpacked from the server correctly
	implement functionality for Start of Game Control
		ensure the correct utility and data objects can be created correctly and sent to the server
	implement functionality for Game Control
		ensure the data can be sent to the panels and the server
		ensure that the data objects can be created and unpacked correctly
		ensure the user has to wait for opponent when it isn't their turn
	implement functionality for End of Game Control
		ensure that the correct data can get unpacked and sent correctly for display in the end of game panel
		ensure user can perform actions to leave end of game screen